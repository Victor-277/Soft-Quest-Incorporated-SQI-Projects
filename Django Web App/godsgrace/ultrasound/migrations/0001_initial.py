# Generated by Django 4.2.7 on 2025-08-16 17:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("doctor", "Doctor"),
                            ("patient", "Patient"),
                        ],
                        default="patient",
                        max_length=10,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=15)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=200)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                ("phone", models.CharField(max_length=15)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UltrasoundReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("scan_date", models.DateField()),
                ("indication", models.CharField(default="F W B & G A", max_length=200)),
                (
                    "hospital",
                    models.CharField(default="God's Grace Ultrasound", max_length=200),
                ),
                (
                    "pregnancy_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("singleton", "Singleton"),
                            ("twins", "Twins"),
                            ("triplets", "Triplets"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "scan_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("longitudinal", "Longitudinal"),
                            ("transverse", "Transverse"),
                            ("oblique", "Oblique"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "fetal_position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cephalic", "Cephalic"),
                            ("breech", "Breech"),
                            ("floating", "Floating"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "fetal_status",
                    models.CharField(
                        blank=True,
                        choices=[("live", "Live"), ("not_live", "Not Live")],
                        max_length=20,
                    ),
                ),
                ("bdp", models.CharField(blank=True, max_length=50)),
                ("crl", models.CharField(blank=True, max_length=50)),
                ("fl", models.CharField(blank=True, max_length=50)),
                ("hc", models.CharField(blank=True, max_length=50)),
                ("ac", models.CharField(blank=True, max_length=50)),
                ("suspected_sex", models.CharField(blank=True, max_length=20)),
                ("average_fetal_age", models.CharField(blank=True, max_length=20)),
                (
                    "placenta_position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("anterior", "Anterior"),
                            ("posterior", "Posterior"),
                            ("fundal", "Fundal"),
                            ("left_lateral", "Left Lateral"),
                            ("right_lateral", "Right Lateral"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "placenta_maturity",
                    models.CharField(
                        blank=True,
                        choices=[("mature", "Mature"), ("immature", "Immature")],
                        max_length=20,
                    ),
                ),
                ("distance_from_cervix", models.CharField(blank=True, max_length=50)),
                ("pravaria", models.CharField(blank=True, max_length=50)),
                (
                    "cervical_os",
                    models.CharField(
                        blank=True,
                        choices=[("closed", "Closed"), ("open", "Open")],
                        max_length=20,
                    ),
                ),
                (
                    "cervical_os_measurement",
                    models.CharField(blank=True, max_length=50),
                ),
                ("intact_cervix_length", models.CharField(blank=True, max_length=50)),
                (
                    "liquor_volume",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("adequate", "Adequate"),
                            ("increased", "Increased"),
                            ("reduced", "Reduced"),
                        ],
                        max_length=20,
                    ),
                ),
                ("afi", models.CharField(blank=True, max_length=50)),
                ("efw", models.CharField(blank=True, max_length=50)),
                ("uss_lmp", models.CharField(blank=True, max_length=50)),
                ("edd", models.CharField(blank=True, max_length=50)),
                (
                    "fetal_anomalies",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("nil_obvious", "Nil Obvious"),
                            ("specific", "Specific"),
                            ("normal", "Normal"),
                            ("abnormal", "Abnormal"),
                        ],
                        max_length=20,
                    ),
                ),
                ("remarks", models.TextField(blank=True)),
                ("signature", models.CharField(default="God's Grace", max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"role": "doctor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ultrasound_reports",
                        to="ultrasound.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-scan_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PatientProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                ("address", models.TextField(blank=True)),
                ("emergency_contact", models.CharField(blank=True, max_length=15)),
                ("medical_history", models.TextField(blank=True)),
                ("allergies", models.TextField(blank=True)),
                ("blood_group", models.CharField(blank=True, max_length=5)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="patient",
            name="user_profile",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="patient_record",
                to="ultrasound.patientprofile",
            ),
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("specialization", models.CharField(blank=True, max_length=100)),
                ("license_number", models.CharField(blank=True, max_length=50)),
                ("years_experience", models.PositiveIntegerField(default=0)),
                ("bio", models.TextField(blank=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("appointment_date", models.DateField()),
                ("appointment_time", models.TimeField()),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        limit_choices_to={"role": "doctor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="ultrasound.patient",
                    ),
                ),
            ],
            options={
                "ordering": ["-appointment_date", "-appointment_time"],
            },
        ),
    ]
